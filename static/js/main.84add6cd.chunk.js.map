{"version":3,"sources":["components/GeneralInformation.js","components/Education.js","components/Experience.js","App.js","index.js"],"names":["formStyle","display","gridTemplateColumns","margin","gridRowGap","gridColumnGap","GeneralInformation","useState","firstName","lastName","email","dateOfBirth","personalInfo","setPersonalInfo","editMode","setEditMode","handleSubmit","e","preventDefault","prevMode","console","log","handleChange","target","name","value","info","className","onSubmit","style","type","required","placeholder","onChange","onClick","Education","props","instituteName","degreeName","startDate","endDate","educationInfo","setEducationInfo","mode","handleDelete","id","Experience","companyName","position","task","experienceInfo","setExperienceInfo","expInfo","gridColumn","flexStyle","flexDirection","alignItems","App","educationId","setEducationId","experienceId","setExperienceId","handleAddClick","edu","Date","now","exp","filter","key","education","map","experience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84add6cd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst formStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr 1fr\",\n  margin: \"1rem\",\n  gridRowGap: \"1rem\",\n  gridColumnGap: \"2rem\",\n};\n\nexport default function GeneralInformation() {\n  const [personalInfo, setPersonalInfo] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    dateOfBirth: \"\",\n  });\n  const [editMode, setEditMode] = useState(true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setEditMode((prevMode) => !prevMode);\n    console.log(editMode);\n  };\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    setPersonalInfo((info) => {\n      const newInfo = { ...info, [name]: value };\n      return newInfo;\n    });\n  }\n\n  // if (!editMode) {\n  //   return <View handleEdit={handleSubmit} info={personalInfo} />;\n  // }\n\n  if (!editMode) {\n    return (\n      <div>\n        <span className=\"button button-edit\" onClick={handleSubmit}>Edit</span>\n        <p>\n          <span>First Name: </span>\n          {personalInfo.firstName}\n        </p>\n        <p>\n          <span>Last Name: </span>\n          {personalInfo.lastName}\n        </p>\n        <p>\n          <span>Email: </span>\n          {personalInfo.email}\n        </p>\n        <p>\n          <span>Date Of Birth: </span>\n          {personalInfo.dateOfBirth}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-control\">\n      <h3>General Information</h3>\n\n      <form onSubmit={handleSubmit} className=\"flex-control\">\n        <div style={formStyle}>\n          <label>\n            <p>First Name: </p>\n            <input\n              value={personalInfo.firstName}\n              name=\"firstName\"\n              type=\"text\"\n              required={true}\n              placeholder=\"First Name\"\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <p>Last Name: </p>\n            <input\n              value={personalInfo.lastName}\n              name=\"lastName\"\n              type=\"text\"\n              required={true}\n              placeholder=\"last Name\"\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <p>Email Address: </p>\n            <input\n              value={personalInfo.email}\n              name=\"email\"\n              type=\"text\"\n              required={true}\n              placeholder=\"email\"\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            <p>Date Of Birth: </p>\n            <input\n              value={personalInfo.dateOfBirth}\n              type=\"date\"\n              required={true}\n              onChange={handleChange}\n              name=\"dateOfBirth\"\n            />\n          </label>\n        </div>\n        <button className=\"button\" type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport './style.css'\n\nconst formStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr 1fr\",\n  margin: \"1rem\",\n  gridRowGap: \"1rem\",\n  gridColumnGap: \"2rem\",\n};\n\n\n\nexport default function Education(props) {\n  const [educationInfo, setEducationInfo] = useState({\n    instituteName: \"\",\n    degreeName: \"\",\n    startDate: \"\",\n    endDate: \"\",\n  });\n\n  const [editMode, setEditMode] = useState(true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setEditMode((mode) => !mode);\n  };\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    setEducationInfo((info) => {\n      const newInfo = { ...info, [name]: value };\n      return newInfo;\n    });\n  }\n\n  if (!editMode) {\n    return (\n      <div>\n        <span className=\"button button-edit\" onClick={handleSubmit}>Edit</span>\n        <p>\n          <span>Institute Name: </span>\n          {educationInfo.instituteName}\n        </p>\n        <p>\n          <span>Degree Name: </span>\n          {educationInfo.degreeName}\n        </p>\n        <p>\n          <span>Start Date: </span>\n          {educationInfo.startDate}\n        </p>\n        <p>\n          <span>End Date: </span>\n          {educationInfo.endDate}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-control\">\n      <form onSubmit={handleSubmit} className=\"flex-control\">\n        <div style={formStyle}>\n          <label>\n            <p>Institute Name: </p>\n            <input\n              type=\"text\"\n              name=\"instituteName\"\n              placeholder=\"Institute Name\"\n              onChange={handleChange}\n              required={true}\n              value={educationInfo.instituteName}\n            />\n          </label>\n          <label>\n            <p>Degree: </p>\n            <input\n              type=\"text\"\n              name=\"degreeName\"\n              placeholder=\"Degree Name\"\n              onChange={handleChange}\n              required={true}\n              value={educationInfo.degreeName}\n            />\n          </label>\n          <label>\n            <p>Start Date: </p>\n            <input\n              name=\"startDate\"\n              type=\"Date\"\n              onChange={handleChange}\n              required={true}\n              value={educationInfo.startDate}\n            />\n          </label>\n          <label>\n            <p>Finish Date: </p>\n            <input\n              type=\"Date\"\n              name=\"endDate\"\n              onChange={handleChange}\n              value={educationInfo.endDate}\n            />\n          </label>\n        </div>\n        <div>\n          <button className=\"button\"  type=\"submit\">Save</button>\n          <span className=\"button\" onClick={() => props.handleDelete(\"education\", props.id)}>\n            Delete\n          </span>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst formStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr 1fr\",\n  margin: \"1rem\",\n  gridRowGap: \"1rem\",\n  gridColumnGap: \"2rem\",\n};\n\nexport default function Experience(props) {\n  const [experienceInfo, setExperienceInfo] = useState({\n    companyName: \"\",\n    position: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    task: \"\",\n  });\n\n  const [editMode, setEditMode] = useState(true);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setExperienceInfo((expInfo) => {\n      const newList = { ...expInfo, [name]: value };\n      return newList;\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setEditMode((mode) => !mode);\n  };\n\n  if (!editMode) {\n    return (\n      <div>\n        <span className=\"button button-edit\" onClick={handleSubmit}>\n          Edit\n        </span>\n        apple\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-control\">\n      <form style={formStyle} className=\"flex-control\" onSubmit={handleSubmit}>\n        <label>\n          <p>Company Name: </p>\n          <input\n            type=\"text\"\n            name=\"companyName\"\n            placeholder=\"Company Name\"\n            onChange={handleChange}\n            required={true}\n            value={experienceInfo.instituteName}\n          />\n        </label>\n        <label>\n          <p>Position Name: </p>\n          <input\n            type=\"text\"\n            name=\"position\"\n            onChange={handleChange}\n            value={experienceInfo.position}\n          />\n        </label>\n        <label>\n          <p>Start Date: </p>\n          <input\n            type=\"Date\"\n            name=\"startDate\"\n            onChange={handleChange}\n            required={true}\n            value={experienceInfo.startDate}\n          />\n        </label>\n        <label>\n          <p>End Date: </p>\n          <input\n            type=\"Date\"\n            name=\"endDate\"\n            placeholder=\"Company Name\"\n            onChange={handleChange}\n            required={true}\n            value={experienceInfo.endDate}\n          />\n        </label>\n        <label style={{ gridColumn: \"1/3\" }}>\n          <p>Job Tasks: </p>\n          <input\n            type=\"message\"\n            name=\"task\"\n            placeholder=\"Task\"\n            onChange={handleChange}\n            required={true}\n            value={experienceInfo.task}\n          />\n        </label>\n        <div>\n          <button className=\"button\" type=\"submit\">\n            Save\n          </button>\n          <span\n            className=\"button\"\n            onClick={() => props.handleDelete(\"experience\", props.id)}\n          >\n            Delete\n          </span>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport GeneralInformation from \"./components/GeneralInformation\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\n// import uniqid from \"uniqid\";\n\nconst flexStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n};\n\nexport default function App() {\n  const [educationId, setEducationId] = useState([]);\n  const [experienceId, setExperienceId] = useState([]);\n\n  const handleAddClick = (e) => {\n    if (e.target.name === \"addEducation\") {\n      setEducationId((edu) => [...edu, Date.now()]);\n    } else {\n      setExperienceId((exp) => [...exp, Date.now()]);\n    }\n  };\n\n  const handleDelete = (name, id) => {\n    if (name === \"education\") {\n      setEducationId((edu) => {\n        let newList = edu.filter((key) => key !== id);\n        return newList;\n      });\n    } else {\n      setExperienceId((exp) => {\n        let newList = exp.filter((key) => key !== id);\n        return newList;\n      });\n    }\n  };\n\n  const education = educationId.map((id) => (\n    <Education key={id} id={id} handleDelete={handleDelete} />\n  ));\n\n  const experience = experienceId.map((id) => (\n    <Experience key={id} id={id} handleDelete={handleDelete} />\n  ));\n\n  return (\n    <div style={flexStyle}>\n      <h1>CV Builder</h1>\n      <GeneralInformation />\n\n      <h3>Education</h3>\n      {education}\n      <button className=\"button\" name=\"addEducation\" onClick={handleAddClick}>\n        Add Education\n      </button>\n\n      <h3>Experience</h3>\n      {experience}\n      <button className=\"button\" name=\"addExperience\" onClick={handleAddClick}>\n        Add Experience\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}